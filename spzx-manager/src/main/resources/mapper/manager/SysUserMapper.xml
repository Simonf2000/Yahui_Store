<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.spzx.manager.mapper.SysUserMapper">

    <resultMap id="SysUserResultMap" type="com.atguigu.spzx.model.entity.system.SysUser" autoMapping="true">

    </resultMap>

    <sql id="columns">
        id,
        username,
        password,
        name,
        phone,
        avatar,
        description,
        status,
        create_time,
        update_time,
        is_deleted
    </sql>

    <select id="selectByUserName" resultMap="SysUserResultMap">
        select
        <include refid="columns"></include>
        from sys_user
        where username = #{userName} and is_deleted = 0
    </select>

    <!--    List<SysUser> findPage(SysUserDto sysUserDto);-->

    <select id="findPage" resultMap="SysUserResultMap">
        select
        <include refid="columns"></include>
        from sys_user
<where>
    <if test="dto.keyword!=null and dto.keyword!=''">
        and (username like concat('%',#{dto.keyword},'%') or name like concat('%',#{dto.keyword},'%') or phone like concat('%',#{dto.keyword},'%'))
    </if>
    <if test="dto.createTimeBegin!=null and dto.createTimeBegin!=''">
        and create_time >= #{dto.createTimeBegin}
    </if>
    <if test="dto.createTimeEnd!=null and dto.createTimeEnd!=''">
        and create_time &lt;= #{dto.createTimeEnd}
    </if>
    and is_deleted = 0
</where>
order by id desc
    </select>

<!--    void insert(SysUser sysUser);-->

<!--    SysUser getById(Long id);-->

<!--    void update(SysUser sysUser);-->

<!--    void deleteById(Long id);-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(
        username,
        password,
        name,
        phone,
        avatar,
        description,
        status) values(#{userName},#{password},#{name},#{phone},#{avatar},#{description},#{status})
    </insert>

    <select id="getById" resultMap="SysUserResultMap">
        select
        <include refid="columns"></include>
        from sys_user
        where id = #{id}
    </select>

    <update id="update">
        update sys_user set
        username=#{userName},
        password=#{password},
        name=#{name},
        phone=#{phone},
        avatar=#{avatar},
        description=#{description},
        status=#{status}
        where id = #{id}
    </update>

    <!--    void deleteById(Long id);-->
    <delete id="deleteById">
        update sys_user set is_deleted = 1 where id = #{id}
    </delete>

<!--    void deleteUserRoleRelationship(Long userId);-->
    <delete id="deleteUserRoleRelationship">
        delete from sys_user_role where user_id = #{userId}
    </delete>


    <!--    void insertUserRoleRelationship(@Param("roleId") Long roleId, @Param("userId") Long userId);-->
    <insert id="insertUserRoleRelationship">
       INSERT INTO sys_user_role(role_id,user_id) values(#{roleId},#{userId})
    </insert>
</mapper>